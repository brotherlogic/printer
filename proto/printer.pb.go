// Code generated by protoc-gen-go. DO NOT EDIT.
// source: printer.proto

/*
Package printer is a generated protocol buffer package.

It is generated from these files:
	printer.proto

It has these top-level messages:
	PrintRequest
	PrintResponse
*/
package printer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PrintRequest struct {
	Text  string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Lines []string `protobuf:"bytes,2,rep,name=lines" json:"lines,omitempty"`
}

func (m *PrintRequest) Reset()                    { *m = PrintRequest{} }
func (m *PrintRequest) String() string            { return proto.CompactTextString(m) }
func (*PrintRequest) ProtoMessage()               {}
func (*PrintRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PrintRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *PrintRequest) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

type PrintResponse struct {
}

func (m *PrintResponse) Reset()                    { *m = PrintResponse{} }
func (m *PrintResponse) String() string            { return proto.CompactTextString(m) }
func (*PrintResponse) ProtoMessage()               {}
func (*PrintResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*PrintRequest)(nil), "printer.PrintRequest")
	proto.RegisterType((*PrintResponse)(nil), "printer.PrintResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PrintService service

type PrintServiceClient interface {
	Print(ctx context.Context, in *PrintRequest, opts ...grpc.CallOption) (*PrintResponse, error)
}

type printServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrintServiceClient(cc *grpc.ClientConn) PrintServiceClient {
	return &printServiceClient{cc}
}

func (c *printServiceClient) Print(ctx context.Context, in *PrintRequest, opts ...grpc.CallOption) (*PrintResponse, error) {
	out := new(PrintResponse)
	err := grpc.Invoke(ctx, "/printer.PrintService/Print", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PrintService service

type PrintServiceServer interface {
	Print(context.Context, *PrintRequest) (*PrintResponse, error)
}

func RegisterPrintServiceServer(s *grpc.Server, srv PrintServiceServer) {
	s.RegisterService(&_PrintService_serviceDesc, srv)
}

func _PrintService_Print_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrintServiceServer).Print(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/printer.PrintService/Print",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrintServiceServer).Print(ctx, req.(*PrintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PrintService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "printer.PrintService",
	HandlerType: (*PrintServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Print",
			Handler:    _PrintService_Print_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "printer.proto",
}

func init() { proto.RegisterFile("printer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x28, 0xca, 0xcc,
	0x2b, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x2c, 0xb8,
	0x78, 0x02, 0x40, 0xcc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21, 0x2e, 0x96, 0x92,
	0xd4, 0x8a, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x48, 0x84, 0x8b, 0x35,
	0x27, 0x33, 0x2f, 0xb5, 0x58, 0x82, 0x49, 0x81, 0x59, 0x83, 0x33, 0x08, 0xc2, 0x51, 0xe2, 0xe7,
	0xe2, 0x85, 0xea, 0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x35, 0xf2, 0x80, 0x1a, 0x15, 0x9c, 0x5a,
	0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc1, 0xc5, 0x0a, 0xe6, 0x0b, 0x89, 0xea, 0xc1, 0x2c, 0x47,
	0xb6, 0x4a, 0x4a, 0x0c, 0x5d, 0x18, 0x62, 0x8e, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x91, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x87, 0x7f, 0x70, 0xb5, 0x00, 0x00, 0x00,
}
